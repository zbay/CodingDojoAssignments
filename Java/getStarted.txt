Setting up Spring:
	1. Right click, new, Spring Starter Project
	2. Select "Web", "Devtools" dependencies.
	Also, "tomcat-embed-jasper" and "jstl" for JSP.
	Dependencies can be added in pom.xml.
        <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-jasper</artifactId>
        </dependency>
        <dependency>
        	<groupId>javax.servlet</groupId>
        	<artifactId>jstl</artifactId>
        </dependency>
	3. Create src/main/webapp folder
	Create src/main/webapp/WEB-INF
	In src/main/resources/applications.properties, add spring.mvc.view.prefix: /WEB-INF/
	Add JSPs (test:  <%@ taglib prefix = "c" uri = "http://java.sun.com/jsp/jstl/core" %>
    	<c:out value="${2+2}"/> ). return .jsp filestring instead of .html filestring
	3. Right click on project after it's built. Click "Spring Boot App" to run
	4. Make controllers package com.zbay.<<projectname>>.controllers under the src/main/java folder
	And, com.zbay.<<projectname>>.models
	5. Put HTML, CSS, and JS in src/main/resources/static folder
	6. 
	Note. @RestController is a combo of @Controller and @ResponseBody

Setting up Apache Tomcat:
	A. Build Path
	B. PROJECTNAME/WebContent/WEB-INF/classes
	C. Apply
	D. Right click Java Resources/src, click New -> Servlet
	E. Name package com.<<yourname>>.web
	F. Name Class name (Home?)
	G. Modify Home.java file
	H. Right click Home.java and choose Run As -> Run On Server. Navigate to localhost:8080/HelloWorld/Home
	I. Add web.xml to WEB-INF to allow XML configuration
	J. Static files are served from WebContent folder
	K. Add servlet and servlet-mapping tags to web.xml, to add routes
	L. Put .jsp files in WEB-INF/views folder
	M. Models and controllers inside the package "folder"?
	N. JSTL.jar in the tomcat/lib directory. User JSTL prefix in every JSP file
	<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

